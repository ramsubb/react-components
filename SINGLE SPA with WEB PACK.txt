SINGLE SPA with WEB PACK

mkdir main-app
cd main-app

// main-app/src/index.tsx

import React from 'react';
import ReactDOM from 'react-dom';
import singleSpaReact from 'single-spa-react';
import { Router, Link } from '@reach/router';
import './index.css';

const Main: React.FC = () => {
  return (
    <div>
      <h1>Main App</h1>
      <nav>
        <Link to="/main">Main</Link> | <Link to="/remote">Remote</Link>
      </nav>
      <Router>
        <MainComponent path="/main" />
      </Router>
    </div>
  );
};

const MainComponent: React.FC = () => {
  return <h2>This is a component from the main app</h2>;
};

const reactLifecycles = singleSpaReact({
  React,
  ReactDOM,
  rootComponent: Main,
  domElementGetter: () => document.getElementById('main-app')!
});

export const { bootstrap, mount, unmount } = reactLifecycles;



// main-app/src/index.css

body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}


mkdir remote-app
cd remote-app

// remote-app/src/index.tsx

import React from 'react';

const RemoteComponent: React.FC = () => {
  return (
    <div>
      <h2>This is a component from the remote app</h2>
    </div>
  );
};


export default RemoteComponent;

// remote-app/package.json

{
  "name": "remote-app",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "start": "webpack serve --mode development --port 3002 --config webpack.config.js",
    "build": "webpack --mode production --config webpack.config.js"
  },
  "dependencies": {
    "react": "^17.0.2",
    "react-dom": "^17.0.2"
  },
  "devDependencies": {
    "@types/react": "^17.0.3",
    "@types/react-dom": "^17.0.3",
    "html-webpack-plugin": "^5.5.0",
    "webpack": "^5.64.0",
    "webpack-cli": "^4.9.0",
    "webpack-dev-server": "^4.7.4"
  }
}



// remote-app/webpack.config.js

const HtmlWebpackPlugin = require('html-webpack-plugin');
const { ModuleFederationPlugin } = require('webpack').container;

module.exports = {
  entry: './src/index.tsx',
  output: {
    publicPath: 'http://localhost:3002/',
    clean: true,
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.js'],
  },
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        use: 'ts-loader',
        exclude: /node_modules/,
      },
    ],
  },
  plugins: [
    new ModuleFederationPlugin({
      name: 'remoteApp',
      filename: 'remoteEntry.js',
      exposes: {
        './RemoteComponent': './src/index',
      },
    }),
    new HtmlWebpackPlugin({
      template: './public/index.html',
    }),
  ],
  devServer: {
    port: 3002,
  },
};



// root-config.js

import { registerApplication, start } from 'single-spa';

registerApplication(
  'main-app',
  () => import('./main-app/src/index'),
  (location) => location.pathname === '/' || location.pathname.startsWith('/main')
);

registerApplication(
  'remote-app',
  () => import('http://localhost:3002/remoteEntry.js'),
  () => true
);

start();


my-single-spa-app/
  ├── main-app/
  │   ├── public/
  │   │   ├── index.html
  │   ├── src/
  │   │   ├── index.tsx
  │   │   ├── index.css
  │   │   └── ...
  │   └── package.json
  ├── remote-app/
  │   ├── src/
  │   │   ├── index.tsx
  │   │   └── ...
  │   ├── webpack.config.js
  │   └── package.json
  ├── root-config.js
  └── package.json